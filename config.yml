Configuration:
  seed: 111  # Set seed
  save_sample_interval: 1   # Save sample every n epochs
  checkpoint_interval: 5  # Save model every n epochs 
  training_mode: alternating  # training mode 'alternating' or 'combined'
  show_sample: False
  load_checkpoint: False
  training: True
  generate_data: True
Hyperparameter:
  num_epochs: 100
  batch_size: 32
  # model selector can have only 1 generator at first index
  model_selector: 'generator,
                  classical_discriminator_11, 
                  hybrid_quantum_discriminator_1,'
  models:
    generator:
      learning_rate: 0.0002
      betas: 0.9, 0.999
      model_class: Generator # Select Class for model from models.py
      loss_function: BCELoss
      optimizer: Adam  # Recommend Adam or RMSprop
    classical_discriminator_1:
      learning_rate: 0.0001
      betas: 0.9, 0.999
      model_class: ClassicalDiscriminator
      loss_function: BCELoss
      optimizer: Adam
    classical_discriminator_2:
      learning_rate: 0.0001
      betas: 0.9, 0.999
      model_class: ClassicalDiscriminator
      loss_function: BCELoss
      optimizer: Adam
    hybrid_quantum_discriminator_1:
      learning_rate: 0.0001
      betas: 0.9, 0.999
      model_class: HybridQuantumDiscriminator
      loss_function: BCELoss
      optimizer: Adam
    quantum_discriminator:
      learning_rate: 0.0001
      betas: 0.9, 0.999
      model_class: QuantumDiscriminator
      loss_function: NLLLoss
      optimizer: Adam